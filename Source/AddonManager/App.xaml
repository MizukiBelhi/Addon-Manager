<Application x:Class="AddonManager.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:sw="clr-namespace:AddonManager"
             xmlns:ui="clr-namespace:AddonManager.UI"
             StartupUri="MainWindow.xaml">
    <Application.Resources>

        <Style x:Key="MainBWindowStyle2" TargetType="{x:Type Window}">
            <Setter Property="Background" Value="{DynamicResource MainWindowBackgroundColor}" />
        </Style>

        <SolidColorBrush x:Key="WindowColor" Color="Red" />
        <SolidColorBrush x:Key="WindowBackColor" Color="#FF222222" />
        <SolidColorBrush x:Key="WindowForeColor" Color="WhiteSmoke" />
        <SolidColorBrush x:Key="WindowForeHighlightColor" Color="WhiteSmoke" />
        <SolidColorBrush x:Key="WindowButtonColor" Color="#FF222222" />
        <SolidColorBrush x:Key="WindowButtonOverColor" Color="#FF303030" />
        <SolidColorBrush x:Key="WindowButtonPressedColor" Color="#FF131313" />
        <SolidColorBrush x:Key="WindowInvisibleColor" Color="#00000000" />
        <SolidColorBrush x:Key="StandardBorderBrush" Color="#FF303030" />
        <SolidColorBrush x:Key="StandardBackgroundBrush" Color="#FF303030" />
        <SolidColorBrush x:Key="HoverBorderBrush" Color="#DDD" />
        <SolidColorBrush x:Key="SelectedBackgroundBrush" Color="#FF303030" />
        <SolidColorBrush x:Key="SelectedForegroundBrush" Color="#FF131313" />
        <SolidColorBrush x:Key="DisabledForegroundBrush" Color="#88131313" />
        <SolidColorBrush x:Key="NormalBrush" Color="#88131313" />
        <SolidColorBrush x:Key="NormalBorderBrush" Color="#88131313" />
        <SolidColorBrush x:Key="HorizontalNormalBrush" Color="#88131313" />
        <SolidColorBrush x:Key="HorizontalNormalBorderBrush" Color="#88131313" />
        <LinearGradientBrush x:Key="ListBoxBackgroundBrush"
                             StartPoint="0,0" EndPoint="1,0.001">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="White" Offset="0.0" />
                    <GradientStop Color="White" Offset="0.6" />
                    <GradientStop Color="#DDDDDD" Offset="1.2" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <LinearGradientBrush x:Key="StandardBrush"
                             StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#FFF" Offset="0.0" />
                    <GradientStop Color="#CCC" Offset="1.0" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="GlyphBrush" Color="#FFF" />
        <LinearGradientBrush x:Key="PressedBrush"
                             StartPoint="0,0" EndPoint="0,1">
            <GradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Color="#BBB" Offset="0.0" />
                    <GradientStop Color="#EEE" Offset="0.1" />
                    <GradientStop Color="#EEE" Offset="0.9" />
                    <GradientStop Color="#FFF" Offset="1.0" />
                </GradientStopCollection>
            </GradientBrush.GradientStops>
        </LinearGradientBrush>

        <ui:WindowMinimizeCommand x:Key="MinimizeCommand" />
        <ui:WindowMaximizeCommand x:Key="MaximizeCommand" />
        <ui:WindowCloseCommand x:Key="CloseCommand" />

        <Style TargetType="{x:Type Button}" x:Key="WindowButton">
            <Setter Property="Height" Value="25" />
            <Setter Property="Width" Value="25" />
            <Setter Property="Background" Value="{StaticResource WindowButtonColor}" />
            <Setter Property="Foreground" Value="{StaticResource WindowForeColor}" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border Background="{TemplateBinding Background}">
                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" Value="{StaticResource WindowButtonColor}" />
                                <Setter Property="Foreground" Value="{StaticResource WindowColor}" />
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" Value="{StaticResource WindowButtonOverColor}" />
                                <Setter Property="Foreground" Value="{StaticResource WindowForeHighlightColor}" />
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" Value="{StaticResource WindowButtonPressedColor}" />
                                <Setter Property="Foreground" Value="{StaticResource WindowForeColor}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style TargetType="{x:Type Image}" x:Key="WindowIcon">
            <Setter Property="Height" Value="42" />
            <Setter Property="Width" Value="42" />
        </Style>

        <ControlTemplate x:Key="WindowTemplate" TargetType="{x:Type Window}">
            <Grid Background="{StaticResource WindowBackColor}">
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30" />
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <Grid Grid.Row="0" Margin="5,0,5,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="50" />
                        </Grid.ColumnDefinitions>
                        <Label Grid.Column="0"
                               ui:ControlDoubleClickBehavior.ExecuteCommand="{StaticResource CloseCommand}"
                               ui:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                               Padding="0">
                            <Image DockPanel.Dock="Left" Style="{StaticResource WindowIcon}"
                                   Source="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}},Path=Icon}"
                                   Width="24"
                                   ui:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                                   ui:ShowSystemMenuBehavior.LeftButtonShowAt="{Binding ElementName=WindowContent}" />
                        </Label>
                        <Label Grid.Column="1" DockPanel.Dock="Left" Content="{TemplateBinding Property=Title}"
                               Padding="3,0,0,0"
                               HorizontalContentAlignment="Center"
                               VerticalContentAlignment="Center"
                               HorizontalAlignment="Stretch"
                               VerticalAlignment="Stretch"
                               Foreground="{StaticResource WindowForeColor}"
                               FontSize="16"
                               ui:WindowDragBehavior.LeftMouseButtonDrag="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                               ui:ControlDoubleClickBehavior.ExecuteCommand="{StaticResource MaximizeCommand}"
                               ui:ControlDoubleClickBehavior.ExecuteCommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                               ui:ShowSystemMenuBehavior.TargetWindow="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}"
                               ui:ShowSystemMenuBehavior.RightButtonShow="true" />
                        <StackPanel Grid.Column="2" Orientation="Horizontal" DockPanel.Dock="Right">
                            <Button DockPanel.Dock="Right" Style="{StaticResource WindowButton}"
                                    Command="{StaticResource MinimizeCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                                _
                            </Button>

                            <Button DockPanel.Dock="Right" Style="{StaticResource WindowButton}"
                                    Command="{StaticResource CloseCommand}"
                                    CommandParameter="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                                X
                            </Button>
                        </StackPanel>
                    </Grid>
                    <Border Grid.Row="1" BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <Grid>
                            <AdornerDecorator>
                                <ContentPresenter x:Name="WindowContent" />
                            </AdornerDecorator>
                            <ResizeGrip x:Name="WindowResizeGrip" HorizontalAlignment="Right" IsTabStop="false"
                                        Visibility="Hidden" VerticalAlignment="Bottom" />
                        </Grid>
                    </Border>
                </Grid>
            </Grid>
            <ControlTemplate.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="ResizeMode" Value="CanMinimize" />
                        <Condition Property="WindowState" Value="Normal" />
                    </MultiTrigger.Conditions>
                    <Setter Property="Visibility" TargetName="WindowResizeGrip" Value="Hidden" />
                </MultiTrigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <Style x:Key="CustomWindowStyle" TargetType="{x:Type Window}">
            <Setter Property="WindowStyle" Value="None" />
            <Setter Property="AllowsTransparency" Value="True" />
            <Setter Property="MinWidth" Value="200" />
            <Setter Property="MinHeight" Value="46" />
            <!--CaptionHeight + ResizeBorderThickness * 2-->
            <Setter Property="Background" Value="{DynamicResource MainWindowBackgroundColor}" />
            <Setter Property="BorderBrush" Value="Black" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Foreground" Value="White" />
            <Setter Property="ResizeMode" Value="CanMinimize" />
            <Setter Property="Template" Value="{StaticResource WindowTemplate}" />
        </Style>


        <Style x:Key="MainWindowTextStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="White" />
        </Style>
        <Style x:Key="MainWindowTextBlockStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White" />
        </Style>
        <Style TargetType="{x:Type Hyperlink}">
            <Setter Property="FocusVisualStyle" Value="{x:Null}" />
            <Setter Property="Foreground" Value="#767676" />
            <Setter Property="TextBlock.TextDecorations" Value="{x:Null}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Foreground" Value="#BCBCBC" />
                    <Setter Property="TextBlock.TextDecorations" Value="Underline" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style x:Key="MainWindowTextBlockStyle2" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#FFFF6666" />
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style x:Key="MainWindowStyle" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="#FF222222" />
        </Style>
        <Style x:Key="MainWindowErrorTextStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="#FFFF6666" />
        </Style>

        <Style x:Key="MainWindowCheckbox" TargetType="{x:Type CheckBox}">
            <Setter Property="Foreground" Value="White" />
        </Style>

        <ControlTemplate x:Key="CustomButtonControlTemplate" TargetType="{x:Type Button}">
            <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}"
                    SnapsToDevicePixels="True">

                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}"
                                  Content="{TemplateBinding Content}"
                                  ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
            </Border>
        </ControlTemplate>


        <Style x:Key="MainWindowTabStyle" TargetType="{x:Type TabItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TabItem}">
                        <Grid>
                            <Border
                                Name="Border"
                                Margin="0,0,0,0"
                                Background="#FF3A3A3A"
                                BorderBrush="White"
                                BorderThickness="0,0,0,0"
                                CornerRadius="0,0,0,0">
                                <ContentPresenter x:Name="ContentSite"
                                                  VerticalAlignment="Center"
                                                  HorizontalAlignment="Left"
                                                  ContentSource="Header"
                                                  Margin="32,2,12,2"
                                                  RecognizesAccessKey="True" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="True">
                                <Setter Property="Panel.ZIndex" Value="100" />
                                <Setter TargetName="Border" Property="Background" Value="#FF444444" />
                                <Setter Property="Foreground" Value="White" />

                                <Setter TargetName="ContentSite" Property="TextElement.FontWeight" Value="Bold" />
                                <Setter TargetName="ContentSite" Property="TextElement.FontSize" Value="16" />
                            </Trigger>
                            <Trigger Property="IsSelected" Value="False">
                                <Setter Property="Panel.ZIndex" Value="100" />

                                <Setter TargetName="ContentSite" Property="TextElement.FontWeight" Value="Bold" />
                                <Setter TargetName="ContentSite" Property="TextElement.FontSize" Value="16" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="#FF636363" />

        </Style>

        <Style x:Key="MainWindowTabStylea" TargetType="{x:Type TabItem}">
            <Setter Property="Foreground" Value="White" />

        </Style>


        <Style x:Key="AddonListTextStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="#FFFFFF" />
        </Style>
        <Style x:Key="AddonListStyle" TargetType="{x:Type Grid}">
            <Setter Property="Background" Value="#FF222222" />
        </Style>
        <Style x:Key="AddonListTextBoxStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="#FFFFFF" />
            <Setter Property="FontSize" Value="16" />
        </Style>

        <Style x:Key="AddonTextStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="16" />
        </Style>
        <Style x:Key="AddonDateTextStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="10" />
        </Style>
        <Style x:Key="AddonTextBoxStyle" TargetType="{x:Type TextBlock}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="14" />
        </Style>
        <Style x:Key="AddonStyle" TargetType="{x:Type Rectangle}">
            <Setter Property="Fill" Value="#FF444444" />
        </Style>
        <Style x:Key="AddonDevTextStyle" TargetType="{x:Type Label}">
            <Setter Property="Foreground" Value="White" />
            <Setter Property="FontSize" Value="16" />
        </Style>

        <Style x:Key="AddonSearchBarStyle" TargetType="TextBox">
            <Setter Property="Padding" Value="5" />
            <Setter Property="Margin" Value="5" />
            <Setter Property="FontSize" Value="12" />

            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"
                                CornerRadius="2"
                                BorderBrush="#000"
                                BorderThickness="1"
                                Background="#6c6c6c">
                            <ScrollViewer x:Name="PART_ContentHost"
                                          Focusable="false"
                                          HorizontalScrollBarVisibility="Hidden"
                                          VerticalScrollBarVisibility="Hidden" />
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!-- SrollViewer ScrollBar Repeat Buttons (at each end) -->
        <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border
                            Name="Border"
                            Margin="1"
                            CornerRadius="0"
                            Background="{StaticResource NormalBrush}"
                            BorderThickness="0">
                            <Path
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                Fill="{StaticResource GlyphBrush}"
                                Data="{Binding Path=Content,
                RelativeSource={RelativeSource TemplatedParent}}" />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="Border" Property="Background"
                                        Value="{StaticResource WindowButtonOverColor}" />
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground"
                                        Value="{StaticResource DisabledForegroundBrush}" />
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- SrollViewer ScrollBar Repeat Buttons (The part in the middle, 
             not the thumb the long area between the buttons ) -->
        <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RepeatButton}">
                        <Border Background="Transparent" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!-- ScrollViewer ScrollBar Thumb, that part that can be dragged
            up/down or left/right Buttons -->
        <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Setter Property="IsTabStop" Value="false" />
            <Setter Property="Focusable" Value="false" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Thumb}">
                        <Border
                            CornerRadius="2"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="1" />
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="VerticalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition MaxHeight="18" />
                    <RowDefinition Height="0.00001*" />
                    <RowDefinition MaxHeight="18" />
                </Grid.RowDefinitions>
                <Border
                    Grid.RowSpan="3"
                    CornerRadius="0"
                    Background="#FF333333" />
                <RepeatButton
                    Grid.Row="0"
                    Style="{StaticResource ScrollBarLineButton}"
                    Height="18"
                    Command="ScrollBar.LineUpCommand"
                    Content="M 0 4 L 8 4 L 4 0 Z" />
                <Track
                    Name="PART_Track"
                    Grid.Row="1"
                    IsDirectionReversed="true">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                            Style="{StaticResource ScrollBarPageButton}"
                            Command="ScrollBar.PageUpCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            Style="{StaticResource ScrollBarThumb}"
                            Margin="1,0,1,0"
                            Background="{StaticResource HorizontalNormalBrush}"
                            BorderBrush="{StaticResource HorizontalNormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                            Style="{StaticResource ScrollBarPageButton}"
                            Command="ScrollBar.PageDownCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
                    Grid.Row="3"
                    Style="{StaticResource ScrollBarLineButton}"
                    Height="18"
                    Command="ScrollBar.LineDownCommand"
                    Content="M 0 0 L 4 4 L 8 0 Z" />
            </Grid>
        </ControlTemplate>
        <!-- HorizontalScrollBar Template using the previously created Templates -->
        <ControlTemplate x:Key="HorizontalScrollBar"
                         TargetType="{x:Type ScrollBar}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MaxWidth="18" />
                    <ColumnDefinition Width="0.00001*" />
                    <ColumnDefinition MaxWidth="18" />
                </Grid.ColumnDefinitions>
                <Border
                    Grid.ColumnSpan="3"
                    CornerRadius="0"
                    Background="#00000000" />
                <RepeatButton
                    Grid.Column="0"
                    Style="{StaticResource ScrollBarLineButton}"
                    Width="18"
                    Command="ScrollBar.LineLeftCommand"
                    Content="M 4 0 L 4 8 L 0 4 Z" />
                <Track
                    Name="PART_Track"
                    Grid.Column="1"
                    IsDirectionReversed="False">
                    <Track.DecreaseRepeatButton>
                        <RepeatButton
                            Style="{StaticResource ScrollBarPageButton}"
                            Command="ScrollBar.PageLeftCommand" />
                    </Track.DecreaseRepeatButton>
                    <Track.Thumb>
                        <Thumb
                            Style="{StaticResource ScrollBarThumb}"
                            Margin="0,1,0,1"
                            Background="{StaticResource WindowInvisibleColor}"
                            BorderBrush="{StaticResource NormalBorderBrush}" />
                    </Track.Thumb>
                    <Track.IncreaseRepeatButton>
                        <RepeatButton
                            Style="{StaticResource ScrollBarPageButton}"
                            Command="ScrollBar.PageRightCommand" />
                    </Track.IncreaseRepeatButton>
                </Track>
                <RepeatButton
                    Grid.Column="3"
                    Style="{StaticResource ScrollBarLineButton}"
                    Width="18"
                    Command="ScrollBar.LineRightCommand"
                    Content="M 0 0 L 4 4 L 0 8 Z" />
            </Grid>
        </ControlTemplate>
        <!-- Style for overall  ScrollBar -->
        <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
            <Setter Property="SnapsToDevicePixels" Value="True" />
            <Setter Property="OverridesDefaultStyle" Value="true" />
            <Style.Triggers>
                <Trigger Property="Orientation" Value="Horizontal">
                    <Setter Property="Width" Value="Auto" />
                    <Setter Property="Height" Value="18" />
                    <Setter Property="Template"
                            Value="{StaticResource HorizontalScrollBar}" />
                </Trigger>
                <Trigger Property="Orientation" Value="Vertical">
                    <Setter Property="Width" Value="18" />
                    <Setter Property="Height" Value="Auto" />
                    <Setter Property="Template"
                            Value="{StaticResource VerticalScrollBar}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <!-- Style for overall  ScrollViewer -->
        <Style x:Key="ScrollViewer" TargetType="{x:Type ScrollViewer}">
            <Setter Property="OverridesDefaultStyle" Value="True" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ScrollViewer}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <ScrollContentPresenter Grid.Column="1" />

                            <ScrollBar Name="PART_VerticalScrollBar"
                                       Value="{TemplateBinding VerticalOffset}"
                                       Maximum="{TemplateBinding ScrollableHeight}"
                                       ViewportSize="{TemplateBinding ViewportHeight}"
                                       Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />
                            <ScrollBar Name="PART_HorizontalScrollBar"
                                       Orientation="Horizontal"
                                       Grid.Row="1"
                                       Grid.Column="1"
                                       Value="{TemplateBinding HorizontalOffset}"
                                       Maximum="{TemplateBinding ScrollableWidth}"
                                       ViewportSize="{TemplateBinding ViewportWidth}"
                                       Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Application.Resources>
</Application>